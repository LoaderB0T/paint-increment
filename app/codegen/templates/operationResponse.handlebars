{{{responseMethodTsComments}}}{{responseMethodName}}({{>operationParameters}}): Promise<{{@root.responseClass}}<{{{resultType}}}>> {

    const rb = new {{@root.requestBuilderClass}}(this.rootUrl, {{@root.typeName}}.{{operation.pathVar}}, '{{operation.method}}');
    if (params) {
{{#operation.parameters}}
      rb.{{in}}('{{{name}}}', params{{{varAccess}}}, {{{parameterOptions}}});
{{/operation.parameters}}
{{#requestBody}}
      rb.body(params.body, '{{{mediaType}}}');
{{/requestBody}}
    }

    return firstValueFrom(
      this.http.request(rb.build({
        responseType: '{{responseType}}',
        accept: '{{accept}}'
      })).pipe(
        filter((r: any) => r instanceof HttpResponse),
        map((r: HttpResponse<any>) => {
          {{> handleResponse}}
        }),
        take(1)
      )
    );
  }
